import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import Explore from '../components/sections/Explore';
import { useSelector } from 'react-redux';
import Web3 from 'web3';
import axios from 'axios';
import nftAbi from '../contracts/FathomyachtClub.json';
import leaseAbi from '../contracts/Leasing.json';

const leaseContractAddress = process.env.NEXT_PUBLIC_LEASE_CONTRACT_ADDRESS;
const nftContractAddress = process.env.NEXT_PUBLIC_NFT_CONTRACT_ADDRESS;
const tokenBatchURI = process.env.NEXT_PUBLIC_TOKEN_BATCH_URI;

export default function Location() {
    const [myTokens, setMyTokens] = useState([]);
    const [loading, setLoading] = useState(false);
    const router = useRouter();

    const getTokens = async () => {
        try {
            setLoading(true);
            const { ethereum } = window;
            var w3 = new Web3(ethereum);
            var nftContractInstance = new w3.eth.Contract(nftAbi, nftContractAddress);
            const tokens = await nftContractInstance.methods.getTokens().call();

            const leasableTokens = await getLeasableTokens();
            const leasedTokens = await getLeasedTokens();
            const metas = [];
            for(let i = 0; i < tokens.length; i++) {
                const metaData = await axios.get(tokenBatchURI + '/' + tokens[i]);

                let tokenIsLeasable = false;
                leasableTokens.forEach(item => {
                    if (tokens[i] == item['tokenId'] && item['price'] > 0) {
                        tokenIsLeasable = true;
                    }
                });

                let tokenIsLeased = false;
                leasedTokens.forEach(item => {
                    if (tokens[i] == item) tokenIsLeased = true;
                });
                
                metas.push({
                    leasable: tokenIsLeasable,
                    leased: tokenIsLeased,
                    ...metaData?.data
                });
            }

            setLoading(false);
            setMyTokens(metas);

            
        }
        catch(err) {
            console.log('[errr]', err);
        }
    }

    const getLeasableTokens = async () => {
        try {
            const { ethereum } = window;
            const w3 = new Web3(ethereum);
            const leaseContractInstance = new w3.eth.Contract(leaseAbi, leaseContractAddress);
            const result = await leaseContractInstance.methods.getLeasableTokens().call();

            return result;
        }
        catch (err) {
            console.log('[err]', err);
        }
    }

    const getLeasedTokens = async () => {
        try {
            const { ethereum } = window;
            const w3 = new Web3(ethereum);
            const leaseContractInstance = new w3.eth.Contract(leaseAbi, leaseContractAddress);
            const result = await leaseContractInstance.methods.getLeasedTokens().call();

            return result;
        }
        catch (err) {
            console.log('[err]', err);
        }
    }

    const onTokenClick = (tokenId) => {
        router.push('/tokens/' + tokenId);
    }

    useEffect(() => {
        getTokens();
    }, []);

    return (
        <React.Fragment>
            <Head>
                <title>Explore - Fathom Yacht Club</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
    
            <main className="sm:pt-20">
                <section className="bg-background-light pt-16 sm:mt-1 pb-16">
                    <div className="container w-4/5">
                        <h1 className="text-primary text-center font-bold font-muli text-5xl sm:text-6xl py-6 leading-tight">Explore NFT Tokens</h1>
                    </div>
                </section>

                {
                    loading ? (
                        <React.Fragment>
                            <div className="container flex items-center justify-center p-28">
                                <span className="block animate-spin bg-transparent border-3 border-t-primary rounded-full h-10 w-10"></span>
                            </div>
                        </React.Fragment>
                    ) : (
                        <section>
                            <Explore tokens={myTokens} onTokenClick={onTokenClick} />
                        </section>
                    ) 
                }
            </main>
        </React.Fragment>
    );
};